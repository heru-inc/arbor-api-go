/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the PreSignFileUpload200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreSignFileUpload200ResponseInner{}

// PreSignFileUpload200ResponseInner struct for PreSignFileUpload200ResponseInner
type PreSignFileUpload200ResponseInner struct {
	PartNumber *int32 `json:"partNumber,omitempty"`
	Url *string `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PreSignFileUpload200ResponseInner PreSignFileUpload200ResponseInner

// NewPreSignFileUpload200ResponseInner instantiates a new PreSignFileUpload200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreSignFileUpload200ResponseInner() *PreSignFileUpload200ResponseInner {
	this := PreSignFileUpload200ResponseInner{}
	return &this
}

// NewPreSignFileUpload200ResponseInnerWithDefaults instantiates a new PreSignFileUpload200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreSignFileUpload200ResponseInnerWithDefaults() *PreSignFileUpload200ResponseInner {
	this := PreSignFileUpload200ResponseInner{}
	return &this
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *PreSignFileUpload200ResponseInner) GetPartNumber() int32 {
	if o == nil || IsNil(o.PartNumber) {
		var ret int32
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreSignFileUpload200ResponseInner) GetPartNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *PreSignFileUpload200ResponseInner) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given int32 and assigns it to the PartNumber field.
func (o *PreSignFileUpload200ResponseInner) SetPartNumber(v int32) {
	o.PartNumber = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PreSignFileUpload200ResponseInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreSignFileUpload200ResponseInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PreSignFileUpload200ResponseInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PreSignFileUpload200ResponseInner) SetUrl(v string) {
	o.Url = &v
}

func (o PreSignFileUpload200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreSignFileUpload200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PartNumber) {
		toSerialize["partNumber"] = o.PartNumber
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PreSignFileUpload200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	varPreSignFileUpload200ResponseInner := _PreSignFileUpload200ResponseInner{}

	err = json.Unmarshal(data, &varPreSignFileUpload200ResponseInner)

	if err != nil {
		return err
	}

	*o = PreSignFileUpload200ResponseInner(varPreSignFileUpload200ResponseInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "partNumber")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePreSignFileUpload200ResponseInner struct {
	value *PreSignFileUpload200ResponseInner
	isSet bool
}

func (v NullablePreSignFileUpload200ResponseInner) Get() *PreSignFileUpload200ResponseInner {
	return v.value
}

func (v *NullablePreSignFileUpload200ResponseInner) Set(val *PreSignFileUpload200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePreSignFileUpload200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePreSignFileUpload200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreSignFileUpload200ResponseInner(val *PreSignFileUpload200ResponseInner) *NullablePreSignFileUpload200ResponseInner {
	return &NullablePreSignFileUpload200ResponseInner{value: val, isSet: true}
}

func (v NullablePreSignFileUpload200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreSignFileUpload200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


