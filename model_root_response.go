/*
arborxr-api-v2

This API provides a RESTful interface to interact with your organization's data.

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arbor-api-go

import (
	"encoding/json"
	"fmt"
)

// checks if the RootResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootResponse{}

// RootResponse Information about the API.
type RootResponse struct {
	Name string `json:"name"`
	Description string `json:"description"`
	Version string `json:"version"`
	Documentation string `json:"documentation"`
	Authentication string `json:"authentication"`
	RateLimiting string `json:"rateLimiting"`
	Contact string `json:"contact"`
	TermsOfService string `json:"termsOfService"`
	AdditionalProperties map[string]interface{}
}

type _RootResponse RootResponse

// NewRootResponse instantiates a new RootResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootResponse(name string, description string, version string, documentation string, authentication string, rateLimiting string, contact string, termsOfService string) *RootResponse {
	this := RootResponse{}
	this.Name = name
	this.Description = description
	this.Version = version
	this.Documentation = documentation
	this.Authentication = authentication
	this.RateLimiting = rateLimiting
	this.Contact = contact
	this.TermsOfService = termsOfService
	return &this
}

// NewRootResponseWithDefaults instantiates a new RootResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootResponseWithDefaults() *RootResponse {
	this := RootResponse{}
	return &this
}

// GetName returns the Name field value
func (o *RootResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RootResponse) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *RootResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RootResponse) SetDescription(v string) {
	o.Description = v
}

// GetVersion returns the Version field value
func (o *RootResponse) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *RootResponse) SetVersion(v string) {
	o.Version = v
}

// GetDocumentation returns the Documentation field value
func (o *RootResponse) GetDocumentation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetDocumentationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Documentation, true
}

// SetDocumentation sets field value
func (o *RootResponse) SetDocumentation(v string) {
	o.Documentation = v
}

// GetAuthentication returns the Authentication field value
func (o *RootResponse) GetAuthentication() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetAuthenticationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authentication, true
}

// SetAuthentication sets field value
func (o *RootResponse) SetAuthentication(v string) {
	o.Authentication = v
}

// GetRateLimiting returns the RateLimiting field value
func (o *RootResponse) GetRateLimiting() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RateLimiting
}

// GetRateLimitingOk returns a tuple with the RateLimiting field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetRateLimitingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RateLimiting, true
}

// SetRateLimiting sets field value
func (o *RootResponse) SetRateLimiting(v string) {
	o.RateLimiting = v
}

// GetContact returns the Contact field value
func (o *RootResponse) GetContact() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Contact
}

// GetContactOk returns a tuple with the Contact field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contact, true
}

// SetContact sets field value
func (o *RootResponse) SetContact(v string) {
	o.Contact = v
}

// GetTermsOfService returns the TermsOfService field value
func (o *RootResponse) GetTermsOfService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value
// and a boolean to check if the value has been set.
func (o *RootResponse) GetTermsOfServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TermsOfService, true
}

// SetTermsOfService sets field value
func (o *RootResponse) SetTermsOfService(v string) {
	o.TermsOfService = v
}

func (o RootResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["version"] = o.Version
	toSerialize["documentation"] = o.Documentation
	toSerialize["authentication"] = o.Authentication
	toSerialize["rateLimiting"] = o.RateLimiting
	toSerialize["contact"] = o.Contact
	toSerialize["termsOfService"] = o.TermsOfService

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RootResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"version",
		"documentation",
		"authentication",
		"rateLimiting",
		"contact",
		"termsOfService",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRootResponse := _RootResponse{}

	err = json.Unmarshal(data, &varRootResponse)

	if err != nil {
		return err
	}

	*o = RootResponse(varRootResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "version")
		delete(additionalProperties, "documentation")
		delete(additionalProperties, "authentication")
		delete(additionalProperties, "rateLimiting")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "termsOfService")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRootResponse struct {
	value *RootResponse
	isSet bool
}

func (v NullableRootResponse) Get() *RootResponse {
	return v.value
}

func (v *NullableRootResponse) Set(val *RootResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRootResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRootResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootResponse(val *RootResponse) *NullableRootResponse {
	return &NullableRootResponse{value: val, isSet: true}
}

func (v NullableRootResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


