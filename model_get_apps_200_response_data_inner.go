/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetApps200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApps200ResponseDataInner{}

// GetApps200ResponseDataInner struct for GetApps200ResponseDataInner
type GetApps200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Tags []string `json:"tags,omitempty"`
	DeviceModels []GetApps200ResponseDataInnerDeviceModelsInner `json:"deviceModels,omitempty"`
	PackageName NullableString `json:"packageName,omitempty"`
	Icon NullableGetApps200ResponseDataInnerIcon `json:"icon,omitempty"`
	LatestAvailableVersion NullableString `json:"latestAvailableVersion,omitempty"`
	OwnerOrganization *GetApps200ResponseDataInnerOwnerOrganization `json:"ownerOrganization,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetApps200ResponseDataInner GetApps200ResponseDataInner

// NewGetApps200ResponseDataInner instantiates a new GetApps200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApps200ResponseDataInner() *GetApps200ResponseDataInner {
	this := GetApps200ResponseDataInner{}
	return &this
}

// NewGetApps200ResponseDataInnerWithDefaults instantiates a new GetApps200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApps200ResponseDataInnerWithDefaults() *GetApps200ResponseDataInner {
	this := GetApps200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetApps200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetApps200ResponseDataInner) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApps200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApps200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GetApps200ResponseDataInner) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GetApps200ResponseDataInner) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GetApps200ResponseDataInner) UnsetDescription() {
	o.Description.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GetApps200ResponseDataInner) SetTags(v []string) {
	o.Tags = v
}

// GetDeviceModels returns the DeviceModels field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInner) GetDeviceModels() []GetApps200ResponseDataInnerDeviceModelsInner {
	if o == nil || IsNil(o.DeviceModels) {
		var ret []GetApps200ResponseDataInnerDeviceModelsInner
		return ret
	}
	return o.DeviceModels
}

// GetDeviceModelsOk returns a tuple with the DeviceModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInner) GetDeviceModelsOk() ([]GetApps200ResponseDataInnerDeviceModelsInner, bool) {
	if o == nil || IsNil(o.DeviceModels) {
		return nil, false
	}
	return o.DeviceModels, true
}

// HasDeviceModels returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasDeviceModels() bool {
	if o != nil && !IsNil(o.DeviceModels) {
		return true
	}

	return false
}

// SetDeviceModels gets a reference to the given []GetApps200ResponseDataInnerDeviceModelsInner and assigns it to the DeviceModels field.
func (o *GetApps200ResponseDataInner) SetDeviceModels(v []GetApps200ResponseDataInnerDeviceModelsInner) {
	o.DeviceModels = v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApps200ResponseDataInner) GetPackageName() string {
	if o == nil || IsNil(o.PackageName.Get()) {
		var ret string
		return ret
	}
	return *o.PackageName.Get()
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApps200ResponseDataInner) GetPackageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageName.Get(), o.PackageName.IsSet()
}

// HasPackageName returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasPackageName() bool {
	if o != nil && o.PackageName.IsSet() {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given NullableString and assigns it to the PackageName field.
func (o *GetApps200ResponseDataInner) SetPackageName(v string) {
	o.PackageName.Set(&v)
}
// SetPackageNameNil sets the value for PackageName to be an explicit nil
func (o *GetApps200ResponseDataInner) SetPackageNameNil() {
	o.PackageName.Set(nil)
}

// UnsetPackageName ensures that no value is present for PackageName, not even an explicit nil
func (o *GetApps200ResponseDataInner) UnsetPackageName() {
	o.PackageName.Unset()
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApps200ResponseDataInner) GetIcon() GetApps200ResponseDataInnerIcon {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret GetApps200ResponseDataInnerIcon
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApps200ResponseDataInner) GetIconOk() (*GetApps200ResponseDataInnerIcon, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableGetApps200ResponseDataInnerIcon and assigns it to the Icon field.
func (o *GetApps200ResponseDataInner) SetIcon(v GetApps200ResponseDataInnerIcon) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *GetApps200ResponseDataInner) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *GetApps200ResponseDataInner) UnsetIcon() {
	o.Icon.Unset()
}

// GetLatestAvailableVersion returns the LatestAvailableVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApps200ResponseDataInner) GetLatestAvailableVersion() string {
	if o == nil || IsNil(o.LatestAvailableVersion.Get()) {
		var ret string
		return ret
	}
	return *o.LatestAvailableVersion.Get()
}

// GetLatestAvailableVersionOk returns a tuple with the LatestAvailableVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApps200ResponseDataInner) GetLatestAvailableVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestAvailableVersion.Get(), o.LatestAvailableVersion.IsSet()
}

// HasLatestAvailableVersion returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasLatestAvailableVersion() bool {
	if o != nil && o.LatestAvailableVersion.IsSet() {
		return true
	}

	return false
}

// SetLatestAvailableVersion gets a reference to the given NullableString and assigns it to the LatestAvailableVersion field.
func (o *GetApps200ResponseDataInner) SetLatestAvailableVersion(v string) {
	o.LatestAvailableVersion.Set(&v)
}
// SetLatestAvailableVersionNil sets the value for LatestAvailableVersion to be an explicit nil
func (o *GetApps200ResponseDataInner) SetLatestAvailableVersionNil() {
	o.LatestAvailableVersion.Set(nil)
}

// UnsetLatestAvailableVersion ensures that no value is present for LatestAvailableVersion, not even an explicit nil
func (o *GetApps200ResponseDataInner) UnsetLatestAvailableVersion() {
	o.LatestAvailableVersion.Unset()
}

// GetOwnerOrganization returns the OwnerOrganization field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInner) GetOwnerOrganization() GetApps200ResponseDataInnerOwnerOrganization {
	if o == nil || IsNil(o.OwnerOrganization) {
		var ret GetApps200ResponseDataInnerOwnerOrganization
		return ret
	}
	return *o.OwnerOrganization
}

// GetOwnerOrganizationOk returns a tuple with the OwnerOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInner) GetOwnerOrganizationOk() (*GetApps200ResponseDataInnerOwnerOrganization, bool) {
	if o == nil || IsNil(o.OwnerOrganization) {
		return nil, false
	}
	return o.OwnerOrganization, true
}

// HasOwnerOrganization returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInner) HasOwnerOrganization() bool {
	if o != nil && !IsNil(o.OwnerOrganization) {
		return true
	}

	return false
}

// SetOwnerOrganization gets a reference to the given GetApps200ResponseDataInnerOwnerOrganization and assigns it to the OwnerOrganization field.
func (o *GetApps200ResponseDataInner) SetOwnerOrganization(v GetApps200ResponseDataInnerOwnerOrganization) {
	o.OwnerOrganization = &v
}

func (o GetApps200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApps200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.DeviceModels) {
		toSerialize["deviceModels"] = o.DeviceModels
	}
	if o.PackageName.IsSet() {
		toSerialize["packageName"] = o.PackageName.Get()
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.LatestAvailableVersion.IsSet() {
		toSerialize["latestAvailableVersion"] = o.LatestAvailableVersion.Get()
	}
	if !IsNil(o.OwnerOrganization) {
		toSerialize["ownerOrganization"] = o.OwnerOrganization
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetApps200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	varGetApps200ResponseDataInner := _GetApps200ResponseDataInner{}

	err = json.Unmarshal(data, &varGetApps200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetApps200ResponseDataInner(varGetApps200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "description")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "deviceModels")
		delete(additionalProperties, "packageName")
		delete(additionalProperties, "icon")
		delete(additionalProperties, "latestAvailableVersion")
		delete(additionalProperties, "ownerOrganization")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetApps200ResponseDataInner struct {
	value *GetApps200ResponseDataInner
	isSet bool
}

func (v NullableGetApps200ResponseDataInner) Get() *GetApps200ResponseDataInner {
	return v.value
}

func (v *NullableGetApps200ResponseDataInner) Set(val *GetApps200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApps200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApps200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApps200ResponseDataInner(val *GetApps200ResponseDataInner) *NullableGetApps200ResponseDataInner {
	return &NullableGetApps200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetApps200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApps200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


