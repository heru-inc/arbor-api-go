/*
arborxr-api-v2

This API provides a RESTful interface to interact with your organization's data.

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the Device type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Device{}

// Device Represents a device that is managed by your organization.
type Device struct {
	Id string `json:"id"`
	Title string `json:"title"`
	SerialNumber string `json:"serialNumber"`
	DeviceGroup NullableString `json:"deviceGroup,omitempty"`
	Model string `json:"model"`
	Tags []string `json:"tags"`
	LastCommunicatedAt time.Time `json:"lastCommunicatedAt"`
	IsOnline bool `json:"isOnline"`
	ClientVersion string `json:"clientVersion"`
	LauncherVersion string `json:"launcherVersion"`
	EnrollmentDate time.Time `json:"enrollmentDate"`
	SystemVersion string `json:"systemVersion"`
	OsVersion string `json:"osVersion"`
	Ssid string `json:"ssid"`
	MacAddress string `json:"macAddress"`
	RandomizedMacAddress string `json:"randomizedMacAddress"`
	StorageSpaceFreeGb float64 `json:"storageSpaceFreeGb"`
	StorageSpaceTotalGb float64 `json:"storageSpaceTotalGb"`
	BatteryHealth string `json:"batteryHealth"`
	BatteryCharging bool `json:"batteryCharging"`
	BatteryPercentage int32 `json:"batteryPercentage"`
	BatteryTemperatureC int32 `json:"batteryTemperatureC"`
	IpAddress string `json:"ipAddress"`
	SignalStrength int32 `json:"signalStrength"`
	FrequencyMhz int32 `json:"frequencyMhz"`
	LinkSpeedMbps int32 `json:"linkSpeedMbps"`
	LastLocationLatitude float64 `json:"lastLocationLatitude"`
	LastLocationLongitude float64 `json:"lastLocationLongitude"`
	LastLocationAt time.Time `json:"lastLocationAt"`
	AdditionalProperties map[string]interface{}
}

type _Device Device

// NewDevice instantiates a new Device object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevice(id string, title string, serialNumber string, model string, tags []string, lastCommunicatedAt time.Time, isOnline bool, clientVersion string, launcherVersion string, enrollmentDate time.Time, systemVersion string, osVersion string, ssid string, macAddress string, randomizedMacAddress string, storageSpaceFreeGb float64, storageSpaceTotalGb float64, batteryHealth string, batteryCharging bool, batteryPercentage int32, batteryTemperatureC int32, ipAddress string, signalStrength int32, frequencyMhz int32, linkSpeedMbps int32, lastLocationLatitude float64, lastLocationLongitude float64, lastLocationAt time.Time) *Device {
	this := Device{}
	this.Id = id
	this.Title = title
	this.SerialNumber = serialNumber
	this.Model = model
	this.Tags = tags
	this.LastCommunicatedAt = lastCommunicatedAt
	this.IsOnline = isOnline
	this.ClientVersion = clientVersion
	this.LauncherVersion = launcherVersion
	this.EnrollmentDate = enrollmentDate
	this.SystemVersion = systemVersion
	this.OsVersion = osVersion
	this.Ssid = ssid
	this.MacAddress = macAddress
	this.RandomizedMacAddress = randomizedMacAddress
	this.StorageSpaceFreeGb = storageSpaceFreeGb
	this.StorageSpaceTotalGb = storageSpaceTotalGb
	this.BatteryHealth = batteryHealth
	this.BatteryCharging = batteryCharging
	this.BatteryPercentage = batteryPercentage
	this.BatteryTemperatureC = batteryTemperatureC
	this.IpAddress = ipAddress
	this.SignalStrength = signalStrength
	this.FrequencyMhz = frequencyMhz
	this.LinkSpeedMbps = linkSpeedMbps
	this.LastLocationLatitude = lastLocationLatitude
	this.LastLocationLongitude = lastLocationLongitude
	this.LastLocationAt = lastLocationAt
	return &this
}

// NewDeviceWithDefaults instantiates a new Device object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceWithDefaults() *Device {
	this := Device{}
	return &this
}

// GetId returns the Id field value
func (o *Device) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Device) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Device) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *Device) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Device) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Device) SetTitle(v string) {
	o.Title = v
}

// GetSerialNumber returns the SerialNumber field value
func (o *Device) GetSerialNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *Device) GetSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *Device) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetDeviceGroup returns the DeviceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Device) GetDeviceGroup() string {
	if o == nil || IsNil(o.DeviceGroup.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceGroup.Get()
}

// GetDeviceGroupOk returns a tuple with the DeviceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Device) GetDeviceGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceGroup.Get(), o.DeviceGroup.IsSet()
}

// HasDeviceGroup returns a boolean if a field has been set.
func (o *Device) HasDeviceGroup() bool {
	if o != nil && o.DeviceGroup.IsSet() {
		return true
	}

	return false
}

// SetDeviceGroup gets a reference to the given NullableString and assigns it to the DeviceGroup field.
func (o *Device) SetDeviceGroup(v string) {
	o.DeviceGroup.Set(&v)
}
// SetDeviceGroupNil sets the value for DeviceGroup to be an explicit nil
func (o *Device) SetDeviceGroupNil() {
	o.DeviceGroup.Set(nil)
}

// UnsetDeviceGroup ensures that no value is present for DeviceGroup, not even an explicit nil
func (o *Device) UnsetDeviceGroup() {
	o.DeviceGroup.Unset()
}

// GetModel returns the Model field value
func (o *Device) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *Device) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *Device) SetModel(v string) {
	o.Model = v
}

// GetTags returns the Tags field value
func (o *Device) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *Device) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *Device) SetTags(v []string) {
	o.Tags = v
}

// GetLastCommunicatedAt returns the LastCommunicatedAt field value
func (o *Device) GetLastCommunicatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastCommunicatedAt
}

// GetLastCommunicatedAtOk returns a tuple with the LastCommunicatedAt field value
// and a boolean to check if the value has been set.
func (o *Device) GetLastCommunicatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastCommunicatedAt, true
}

// SetLastCommunicatedAt sets field value
func (o *Device) SetLastCommunicatedAt(v time.Time) {
	o.LastCommunicatedAt = v
}

// GetIsOnline returns the IsOnline field value
func (o *Device) GetIsOnline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOnline
}

// GetIsOnlineOk returns a tuple with the IsOnline field value
// and a boolean to check if the value has been set.
func (o *Device) GetIsOnlineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOnline, true
}

// SetIsOnline sets field value
func (o *Device) SetIsOnline(v bool) {
	o.IsOnline = v
}

// GetClientVersion returns the ClientVersion field value
func (o *Device) GetClientVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientVersion
}

// GetClientVersionOk returns a tuple with the ClientVersion field value
// and a boolean to check if the value has been set.
func (o *Device) GetClientVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientVersion, true
}

// SetClientVersion sets field value
func (o *Device) SetClientVersion(v string) {
	o.ClientVersion = v
}

// GetLauncherVersion returns the LauncherVersion field value
func (o *Device) GetLauncherVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LauncherVersion
}

// GetLauncherVersionOk returns a tuple with the LauncherVersion field value
// and a boolean to check if the value has been set.
func (o *Device) GetLauncherVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LauncherVersion, true
}

// SetLauncherVersion sets field value
func (o *Device) SetLauncherVersion(v string) {
	o.LauncherVersion = v
}

// GetEnrollmentDate returns the EnrollmentDate field value
func (o *Device) GetEnrollmentDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EnrollmentDate
}

// GetEnrollmentDateOk returns a tuple with the EnrollmentDate field value
// and a boolean to check if the value has been set.
func (o *Device) GetEnrollmentDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnrollmentDate, true
}

// SetEnrollmentDate sets field value
func (o *Device) SetEnrollmentDate(v time.Time) {
	o.EnrollmentDate = v
}

// GetSystemVersion returns the SystemVersion field value
func (o *Device) GetSystemVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemVersion
}

// GetSystemVersionOk returns a tuple with the SystemVersion field value
// and a boolean to check if the value has been set.
func (o *Device) GetSystemVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemVersion, true
}

// SetSystemVersion sets field value
func (o *Device) SetSystemVersion(v string) {
	o.SystemVersion = v
}

// GetOsVersion returns the OsVersion field value
func (o *Device) GetOsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value
// and a boolean to check if the value has been set.
func (o *Device) GetOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsVersion, true
}

// SetOsVersion sets field value
func (o *Device) SetOsVersion(v string) {
	o.OsVersion = v
}

// GetSsid returns the Ssid field value
func (o *Device) GetSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value
// and a boolean to check if the value has been set.
func (o *Device) GetSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ssid, true
}

// SetSsid sets field value
func (o *Device) SetSsid(v string) {
	o.Ssid = v
}

// GetMacAddress returns the MacAddress field value
func (o *Device) GetMacAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value
// and a boolean to check if the value has been set.
func (o *Device) GetMacAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MacAddress, true
}

// SetMacAddress sets field value
func (o *Device) SetMacAddress(v string) {
	o.MacAddress = v
}

// GetRandomizedMacAddress returns the RandomizedMacAddress field value
func (o *Device) GetRandomizedMacAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RandomizedMacAddress
}

// GetRandomizedMacAddressOk returns a tuple with the RandomizedMacAddress field value
// and a boolean to check if the value has been set.
func (o *Device) GetRandomizedMacAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RandomizedMacAddress, true
}

// SetRandomizedMacAddress sets field value
func (o *Device) SetRandomizedMacAddress(v string) {
	o.RandomizedMacAddress = v
}

// GetStorageSpaceFreeGb returns the StorageSpaceFreeGb field value
func (o *Device) GetStorageSpaceFreeGb() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.StorageSpaceFreeGb
}

// GetStorageSpaceFreeGbOk returns a tuple with the StorageSpaceFreeGb field value
// and a boolean to check if the value has been set.
func (o *Device) GetStorageSpaceFreeGbOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSpaceFreeGb, true
}

// SetStorageSpaceFreeGb sets field value
func (o *Device) SetStorageSpaceFreeGb(v float64) {
	o.StorageSpaceFreeGb = v
}

// GetStorageSpaceTotalGb returns the StorageSpaceTotalGb field value
func (o *Device) GetStorageSpaceTotalGb() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.StorageSpaceTotalGb
}

// GetStorageSpaceTotalGbOk returns a tuple with the StorageSpaceTotalGb field value
// and a boolean to check if the value has been set.
func (o *Device) GetStorageSpaceTotalGbOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSpaceTotalGb, true
}

// SetStorageSpaceTotalGb sets field value
func (o *Device) SetStorageSpaceTotalGb(v float64) {
	o.StorageSpaceTotalGb = v
}

// GetBatteryHealth returns the BatteryHealth field value
func (o *Device) GetBatteryHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatteryHealth
}

// GetBatteryHealthOk returns a tuple with the BatteryHealth field value
// and a boolean to check if the value has been set.
func (o *Device) GetBatteryHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatteryHealth, true
}

// SetBatteryHealth sets field value
func (o *Device) SetBatteryHealth(v string) {
	o.BatteryHealth = v
}

// GetBatteryCharging returns the BatteryCharging field value
func (o *Device) GetBatteryCharging() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BatteryCharging
}

// GetBatteryChargingOk returns a tuple with the BatteryCharging field value
// and a boolean to check if the value has been set.
func (o *Device) GetBatteryChargingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatteryCharging, true
}

// SetBatteryCharging sets field value
func (o *Device) SetBatteryCharging(v bool) {
	o.BatteryCharging = v
}

// GetBatteryPercentage returns the BatteryPercentage field value
func (o *Device) GetBatteryPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BatteryPercentage
}

// GetBatteryPercentageOk returns a tuple with the BatteryPercentage field value
// and a boolean to check if the value has been set.
func (o *Device) GetBatteryPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatteryPercentage, true
}

// SetBatteryPercentage sets field value
func (o *Device) SetBatteryPercentage(v int32) {
	o.BatteryPercentage = v
}

// GetBatteryTemperatureC returns the BatteryTemperatureC field value
func (o *Device) GetBatteryTemperatureC() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BatteryTemperatureC
}

// GetBatteryTemperatureCOk returns a tuple with the BatteryTemperatureC field value
// and a boolean to check if the value has been set.
func (o *Device) GetBatteryTemperatureCOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatteryTemperatureC, true
}

// SetBatteryTemperatureC sets field value
func (o *Device) SetBatteryTemperatureC(v int32) {
	o.BatteryTemperatureC = v
}

// GetIpAddress returns the IpAddress field value
func (o *Device) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Device) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Device) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetSignalStrength returns the SignalStrength field value
func (o *Device) GetSignalStrength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SignalStrength
}

// GetSignalStrengthOk returns a tuple with the SignalStrength field value
// and a boolean to check if the value has been set.
func (o *Device) GetSignalStrengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignalStrength, true
}

// SetSignalStrength sets field value
func (o *Device) SetSignalStrength(v int32) {
	o.SignalStrength = v
}

// GetFrequencyMhz returns the FrequencyMhz field value
func (o *Device) GetFrequencyMhz() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FrequencyMhz
}

// GetFrequencyMhzOk returns a tuple with the FrequencyMhz field value
// and a boolean to check if the value has been set.
func (o *Device) GetFrequencyMhzOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrequencyMhz, true
}

// SetFrequencyMhz sets field value
func (o *Device) SetFrequencyMhz(v int32) {
	o.FrequencyMhz = v
}

// GetLinkSpeedMbps returns the LinkSpeedMbps field value
func (o *Device) GetLinkSpeedMbps() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LinkSpeedMbps
}

// GetLinkSpeedMbpsOk returns a tuple with the LinkSpeedMbps field value
// and a boolean to check if the value has been set.
func (o *Device) GetLinkSpeedMbpsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkSpeedMbps, true
}

// SetLinkSpeedMbps sets field value
func (o *Device) SetLinkSpeedMbps(v int32) {
	o.LinkSpeedMbps = v
}

// GetLastLocationLatitude returns the LastLocationLatitude field value
func (o *Device) GetLastLocationLatitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.LastLocationLatitude
}

// GetLastLocationLatitudeOk returns a tuple with the LastLocationLatitude field value
// and a boolean to check if the value has been set.
func (o *Device) GetLastLocationLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLocationLatitude, true
}

// SetLastLocationLatitude sets field value
func (o *Device) SetLastLocationLatitude(v float64) {
	o.LastLocationLatitude = v
}

// GetLastLocationLongitude returns the LastLocationLongitude field value
func (o *Device) GetLastLocationLongitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.LastLocationLongitude
}

// GetLastLocationLongitudeOk returns a tuple with the LastLocationLongitude field value
// and a boolean to check if the value has been set.
func (o *Device) GetLastLocationLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLocationLongitude, true
}

// SetLastLocationLongitude sets field value
func (o *Device) SetLastLocationLongitude(v float64) {
	o.LastLocationLongitude = v
}

// GetLastLocationAt returns the LastLocationAt field value
func (o *Device) GetLastLocationAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastLocationAt
}

// GetLastLocationAtOk returns a tuple with the LastLocationAt field value
// and a boolean to check if the value has been set.
func (o *Device) GetLastLocationAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLocationAt, true
}

// SetLastLocationAt sets field value
func (o *Device) SetLastLocationAt(v time.Time) {
	o.LastLocationAt = v
}

func (o Device) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Device) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["serialNumber"] = o.SerialNumber
	if o.DeviceGroup.IsSet() {
		toSerialize["deviceGroup"] = o.DeviceGroup.Get()
	}
	toSerialize["model"] = o.Model
	toSerialize["tags"] = o.Tags
	toSerialize["lastCommunicatedAt"] = o.LastCommunicatedAt
	toSerialize["isOnline"] = o.IsOnline
	toSerialize["clientVersion"] = o.ClientVersion
	toSerialize["launcherVersion"] = o.LauncherVersion
	toSerialize["enrollmentDate"] = o.EnrollmentDate
	toSerialize["systemVersion"] = o.SystemVersion
	toSerialize["osVersion"] = o.OsVersion
	toSerialize["ssid"] = o.Ssid
	toSerialize["macAddress"] = o.MacAddress
	toSerialize["randomizedMacAddress"] = o.RandomizedMacAddress
	toSerialize["storageSpaceFreeGb"] = o.StorageSpaceFreeGb
	toSerialize["storageSpaceTotalGb"] = o.StorageSpaceTotalGb
	toSerialize["batteryHealth"] = o.BatteryHealth
	toSerialize["batteryCharging"] = o.BatteryCharging
	toSerialize["batteryPercentage"] = o.BatteryPercentage
	toSerialize["batteryTemperatureC"] = o.BatteryTemperatureC
	toSerialize["ipAddress"] = o.IpAddress
	toSerialize["signalStrength"] = o.SignalStrength
	toSerialize["frequencyMhz"] = o.FrequencyMhz
	toSerialize["linkSpeedMbps"] = o.LinkSpeedMbps
	toSerialize["lastLocationLatitude"] = o.LastLocationLatitude
	toSerialize["lastLocationLongitude"] = o.LastLocationLongitude
	toSerialize["lastLocationAt"] = o.LastLocationAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Device) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"serialNumber",
		"model",
		"tags",
		"lastCommunicatedAt",
		"isOnline",
		"clientVersion",
		"launcherVersion",
		"enrollmentDate",
		"systemVersion",
		"osVersion",
		"ssid",
		"macAddress",
		"randomizedMacAddress",
		"storageSpaceFreeGb",
		"storageSpaceTotalGb",
		"batteryHealth",
		"batteryCharging",
		"batteryPercentage",
		"batteryTemperatureC",
		"ipAddress",
		"signalStrength",
		"frequencyMhz",
		"linkSpeedMbps",
		"lastLocationLatitude",
		"lastLocationLongitude",
		"lastLocationAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDevice := _Device{}

	err = json.Unmarshal(data, &varDevice)

	if err != nil {
		return err
	}

	*o = Device(varDevice)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "serialNumber")
		delete(additionalProperties, "deviceGroup")
		delete(additionalProperties, "model")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "lastCommunicatedAt")
		delete(additionalProperties, "isOnline")
		delete(additionalProperties, "clientVersion")
		delete(additionalProperties, "launcherVersion")
		delete(additionalProperties, "enrollmentDate")
		delete(additionalProperties, "systemVersion")
		delete(additionalProperties, "osVersion")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "macAddress")
		delete(additionalProperties, "randomizedMacAddress")
		delete(additionalProperties, "storageSpaceFreeGb")
		delete(additionalProperties, "storageSpaceTotalGb")
		delete(additionalProperties, "batteryHealth")
		delete(additionalProperties, "batteryCharging")
		delete(additionalProperties, "batteryPercentage")
		delete(additionalProperties, "batteryTemperatureC")
		delete(additionalProperties, "ipAddress")
		delete(additionalProperties, "signalStrength")
		delete(additionalProperties, "frequencyMhz")
		delete(additionalProperties, "linkSpeedMbps")
		delete(additionalProperties, "lastLocationLatitude")
		delete(additionalProperties, "lastLocationLongitude")
		delete(additionalProperties, "lastLocationAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDevice struct {
	value *Device
	isSet bool
}

func (v NullableDevice) Get() *Device {
	return v.value
}

func (v *NullableDevice) Set(val *Device) {
	v.value = val
	v.isSet = true
}

func (v NullableDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevice(val *Device) *NullableDevice {
	return &NullableDevice{value: val, isSet: true}
}

func (v NullableDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


