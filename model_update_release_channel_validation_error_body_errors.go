/*
arborxr-api-v2

This API provides a RESTful interface to interact with your organization's data.

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arbor-api-go

import (
	"encoding/json"
)

// checks if the UpdateReleaseChannelValidationErrorBodyErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateReleaseChannelValidationErrorBodyErrors{}

// UpdateReleaseChannelValidationErrorBodyErrors struct for UpdateReleaseChannelValidationErrorBodyErrors
type UpdateReleaseChannelValidationErrorBodyErrors struct {
	VersionId []string `json:"versionId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateReleaseChannelValidationErrorBodyErrors UpdateReleaseChannelValidationErrorBodyErrors

// NewUpdateReleaseChannelValidationErrorBodyErrors instantiates a new UpdateReleaseChannelValidationErrorBodyErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateReleaseChannelValidationErrorBodyErrors() *UpdateReleaseChannelValidationErrorBodyErrors {
	this := UpdateReleaseChannelValidationErrorBodyErrors{}
	return &this
}

// NewUpdateReleaseChannelValidationErrorBodyErrorsWithDefaults instantiates a new UpdateReleaseChannelValidationErrorBodyErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateReleaseChannelValidationErrorBodyErrorsWithDefaults() *UpdateReleaseChannelValidationErrorBodyErrors {
	this := UpdateReleaseChannelValidationErrorBodyErrors{}
	return &this
}

// GetVersionId returns the VersionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateReleaseChannelValidationErrorBodyErrors) GetVersionId() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateReleaseChannelValidationErrorBodyErrors) GetVersionIdOk() ([]string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *UpdateReleaseChannelValidationErrorBodyErrors) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given []string and assigns it to the VersionId field.
func (o *UpdateReleaseChannelValidationErrorBodyErrors) SetVersionId(v []string) {
	o.VersionId = v
}

func (o UpdateReleaseChannelValidationErrorBodyErrors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateReleaseChannelValidationErrorBodyErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateReleaseChannelValidationErrorBodyErrors) UnmarshalJSON(data []byte) (err error) {
	varUpdateReleaseChannelValidationErrorBodyErrors := _UpdateReleaseChannelValidationErrorBodyErrors{}

	err = json.Unmarshal(data, &varUpdateReleaseChannelValidationErrorBodyErrors)

	if err != nil {
		return err
	}

	*o = UpdateReleaseChannelValidationErrorBodyErrors(varUpdateReleaseChannelValidationErrorBodyErrors)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "versionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateReleaseChannelValidationErrorBodyErrors struct {
	value *UpdateReleaseChannelValidationErrorBodyErrors
	isSet bool
}

func (v NullableUpdateReleaseChannelValidationErrorBodyErrors) Get() *UpdateReleaseChannelValidationErrorBodyErrors {
	return v.value
}

func (v *NullableUpdateReleaseChannelValidationErrorBodyErrors) Set(val *UpdateReleaseChannelValidationErrorBodyErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateReleaseChannelValidationErrorBodyErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateReleaseChannelValidationErrorBodyErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateReleaseChannelValidationErrorBodyErrors(val *UpdateReleaseChannelValidationErrorBodyErrors) *NullableUpdateReleaseChannelValidationErrorBodyErrors {
	return &NullableUpdateReleaseChannelValidationErrorBodyErrors{value: val, isSet: true}
}

func (v NullableUpdateReleaseChannelValidationErrorBodyErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateReleaseChannelValidationErrorBodyErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


