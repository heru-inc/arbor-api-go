/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetApps200ResponseDataInnerIcon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApps200ResponseDataInnerIcon{}

// GetApps200ResponseDataInnerIcon struct for GetApps200ResponseDataInnerIcon
type GetApps200ResponseDataInnerIcon struct {
	Id *string `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	DownloadUrl *string `json:"downloadUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetApps200ResponseDataInnerIcon GetApps200ResponseDataInnerIcon

// NewGetApps200ResponseDataInnerIcon instantiates a new GetApps200ResponseDataInnerIcon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApps200ResponseDataInnerIcon() *GetApps200ResponseDataInnerIcon {
	this := GetApps200ResponseDataInnerIcon{}
	return &this
}

// NewGetApps200ResponseDataInnerIconWithDefaults instantiates a new GetApps200ResponseDataInnerIcon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApps200ResponseDataInnerIconWithDefaults() *GetApps200ResponseDataInnerIcon {
	this := GetApps200ResponseDataInnerIcon{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInnerIcon) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInnerIcon) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInnerIcon) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetApps200ResponseDataInnerIcon) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInnerIcon) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInnerIcon) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInnerIcon) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetApps200ResponseDataInnerIcon) SetStatus(v string) {
	o.Status = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *GetApps200ResponseDataInnerIcon) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApps200ResponseDataInnerIcon) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *GetApps200ResponseDataInnerIcon) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *GetApps200ResponseDataInnerIcon) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

func (o GetApps200ResponseDataInnerIcon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApps200ResponseDataInnerIcon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["downloadUrl"] = o.DownloadUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetApps200ResponseDataInnerIcon) UnmarshalJSON(data []byte) (err error) {
	varGetApps200ResponseDataInnerIcon := _GetApps200ResponseDataInnerIcon{}

	err = json.Unmarshal(data, &varGetApps200ResponseDataInnerIcon)

	if err != nil {
		return err
	}

	*o = GetApps200ResponseDataInnerIcon(varGetApps200ResponseDataInnerIcon)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "downloadUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetApps200ResponseDataInnerIcon struct {
	value *GetApps200ResponseDataInnerIcon
	isSet bool
}

func (v NullableGetApps200ResponseDataInnerIcon) Get() *GetApps200ResponseDataInnerIcon {
	return v.value
}

func (v *NullableGetApps200ResponseDataInnerIcon) Set(val *GetApps200ResponseDataInnerIcon) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApps200ResponseDataInnerIcon) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApps200ResponseDataInnerIcon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApps200ResponseDataInnerIcon(val *GetApps200ResponseDataInnerIcon) *NullableGetApps200ResponseDataInnerIcon {
	return &NullableGetApps200ResponseDataInnerIcon{value: val, isSet: true}
}

func (v NullableGetApps200ResponseDataInnerIcon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApps200ResponseDataInnerIcon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


