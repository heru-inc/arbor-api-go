/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the ShareReleaseChannel200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShareReleaseChannel200Response{}

// ShareReleaseChannel200Response struct for ShareReleaseChannel200Response
type ShareReleaseChannel200Response struct {
	Message *string `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ShareReleaseChannel200Response ShareReleaseChannel200Response

// NewShareReleaseChannel200Response instantiates a new ShareReleaseChannel200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShareReleaseChannel200Response() *ShareReleaseChannel200Response {
	this := ShareReleaseChannel200Response{}
	return &this
}

// NewShareReleaseChannel200ResponseWithDefaults instantiates a new ShareReleaseChannel200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShareReleaseChannel200ResponseWithDefaults() *ShareReleaseChannel200Response {
	this := ShareReleaseChannel200Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ShareReleaseChannel200Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShareReleaseChannel200Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ShareReleaseChannel200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ShareReleaseChannel200Response) SetMessage(v string) {
	o.Message = &v
}

func (o ShareReleaseChannel200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShareReleaseChannel200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ShareReleaseChannel200Response) UnmarshalJSON(data []byte) (err error) {
	varShareReleaseChannel200Response := _ShareReleaseChannel200Response{}

	err = json.Unmarshal(data, &varShareReleaseChannel200Response)

	if err != nil {
		return err
	}

	*o = ShareReleaseChannel200Response(varShareReleaseChannel200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableShareReleaseChannel200Response struct {
	value *ShareReleaseChannel200Response
	isSet bool
}

func (v NullableShareReleaseChannel200Response) Get() *ShareReleaseChannel200Response {
	return v.value
}

func (v *NullableShareReleaseChannel200Response) Set(val *ShareReleaseChannel200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableShareReleaseChannel200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableShareReleaseChannel200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShareReleaseChannel200Response(val *ShareReleaseChannel200Response) *NullableShareReleaseChannel200Response {
	return &NullableShareReleaseChannel200Response{value: val, isSet: true}
}

func (v NullableShareReleaseChannel200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShareReleaseChannel200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


