/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CompleteAppVersionUploadRequestPartsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompleteAppVersionUploadRequestPartsInner{}

// CompleteAppVersionUploadRequestPartsInner struct for CompleteAppVersionUploadRequestPartsInner
type CompleteAppVersionUploadRequestPartsInner struct {
	PartNumber int32 `json:"partNumber"`
	ETag string `json:"eTag"`
	AdditionalProperties map[string]interface{}
}

type _CompleteAppVersionUploadRequestPartsInner CompleteAppVersionUploadRequestPartsInner

// NewCompleteAppVersionUploadRequestPartsInner instantiates a new CompleteAppVersionUploadRequestPartsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompleteAppVersionUploadRequestPartsInner(partNumber int32, eTag string) *CompleteAppVersionUploadRequestPartsInner {
	this := CompleteAppVersionUploadRequestPartsInner{}
	this.PartNumber = partNumber
	this.ETag = eTag
	return &this
}

// NewCompleteAppVersionUploadRequestPartsInnerWithDefaults instantiates a new CompleteAppVersionUploadRequestPartsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompleteAppVersionUploadRequestPartsInnerWithDefaults() *CompleteAppVersionUploadRequestPartsInner {
	this := CompleteAppVersionUploadRequestPartsInner{}
	return &this
}

// GetPartNumber returns the PartNumber field value
func (o *CompleteAppVersionUploadRequestPartsInner) GetPartNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value
// and a boolean to check if the value has been set.
func (o *CompleteAppVersionUploadRequestPartsInner) GetPartNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartNumber, true
}

// SetPartNumber sets field value
func (o *CompleteAppVersionUploadRequestPartsInner) SetPartNumber(v int32) {
	o.PartNumber = v
}

// GetETag returns the ETag field value
func (o *CompleteAppVersionUploadRequestPartsInner) GetETag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ETag
}

// GetETagOk returns a tuple with the ETag field value
// and a boolean to check if the value has been set.
func (o *CompleteAppVersionUploadRequestPartsInner) GetETagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ETag, true
}

// SetETag sets field value
func (o *CompleteAppVersionUploadRequestPartsInner) SetETag(v string) {
	o.ETag = v
}

func (o CompleteAppVersionUploadRequestPartsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompleteAppVersionUploadRequestPartsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["partNumber"] = o.PartNumber
	toSerialize["eTag"] = o.ETag

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompleteAppVersionUploadRequestPartsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"partNumber",
		"eTag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompleteAppVersionUploadRequestPartsInner := _CompleteAppVersionUploadRequestPartsInner{}

	err = json.Unmarshal(data, &varCompleteAppVersionUploadRequestPartsInner)

	if err != nil {
		return err
	}

	*o = CompleteAppVersionUploadRequestPartsInner(varCompleteAppVersionUploadRequestPartsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "partNumber")
		delete(additionalProperties, "eTag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCompleteAppVersionUploadRequestPartsInner struct {
	value *CompleteAppVersionUploadRequestPartsInner
	isSet bool
}

func (v NullableCompleteAppVersionUploadRequestPartsInner) Get() *CompleteAppVersionUploadRequestPartsInner {
	return v.value
}

func (v *NullableCompleteAppVersionUploadRequestPartsInner) Set(val *CompleteAppVersionUploadRequestPartsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCompleteAppVersionUploadRequestPartsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCompleteAppVersionUploadRequestPartsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompleteAppVersionUploadRequestPartsInner(val *CompleteAppVersionUploadRequestPartsInner) *NullableCompleteAppVersionUploadRequestPartsInner {
	return &NullableCompleteAppVersionUploadRequestPartsInner{value: val, isSet: true}
}

func (v NullableCompleteAppVersionUploadRequestPartsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompleteAppVersionUploadRequestPartsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


