/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetUsers200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUsers200ResponseDataInner{}

// GetUsers200ResponseDataInner struct for GetUsers200ResponseDataInner
type GetUsers200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	Email *string `json:"email,omitempty"`
	OrganizationRole *GetUsers200ResponseDataInnerOrganizationRole `json:"organizationRole,omitempty"`
	GroupRoles []GetUsers200ResponseDataInnerGroupRolesInner `json:"groupRoles,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetUsers200ResponseDataInner GetUsers200ResponseDataInner

// NewGetUsers200ResponseDataInner instantiates a new GetUsers200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUsers200ResponseDataInner() *GetUsers200ResponseDataInner {
	this := GetUsers200ResponseDataInner{}
	return &this
}

// NewGetUsers200ResponseDataInnerWithDefaults instantiates a new GetUsers200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUsers200ResponseDataInnerWithDefaults() *GetUsers200ResponseDataInner {
	this := GetUsers200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetUsers200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *GetUsers200ResponseDataInner) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *GetUsers200ResponseDataInner) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetUsers200ResponseDataInner) SetEmail(v string) {
	o.Email = &v
}

// GetOrganizationRole returns the OrganizationRole field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetOrganizationRole() GetUsers200ResponseDataInnerOrganizationRole {
	if o == nil || IsNil(o.OrganizationRole) {
		var ret GetUsers200ResponseDataInnerOrganizationRole
		return ret
	}
	return *o.OrganizationRole
}

// GetOrganizationRoleOk returns a tuple with the OrganizationRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetOrganizationRoleOk() (*GetUsers200ResponseDataInnerOrganizationRole, bool) {
	if o == nil || IsNil(o.OrganizationRole) {
		return nil, false
	}
	return o.OrganizationRole, true
}

// HasOrganizationRole returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasOrganizationRole() bool {
	if o != nil && !IsNil(o.OrganizationRole) {
		return true
	}

	return false
}

// SetOrganizationRole gets a reference to the given GetUsers200ResponseDataInnerOrganizationRole and assigns it to the OrganizationRole field.
func (o *GetUsers200ResponseDataInner) SetOrganizationRole(v GetUsers200ResponseDataInnerOrganizationRole) {
	o.OrganizationRole = &v
}

// GetGroupRoles returns the GroupRoles field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetGroupRoles() []GetUsers200ResponseDataInnerGroupRolesInner {
	if o == nil || IsNil(o.GroupRoles) {
		var ret []GetUsers200ResponseDataInnerGroupRolesInner
		return ret
	}
	return o.GroupRoles
}

// GetGroupRolesOk returns a tuple with the GroupRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetGroupRolesOk() ([]GetUsers200ResponseDataInnerGroupRolesInner, bool) {
	if o == nil || IsNil(o.GroupRoles) {
		return nil, false
	}
	return o.GroupRoles, true
}

// HasGroupRoles returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasGroupRoles() bool {
	if o != nil && !IsNil(o.GroupRoles) {
		return true
	}

	return false
}

// SetGroupRoles gets a reference to the given []GetUsers200ResponseDataInnerGroupRolesInner and assigns it to the GroupRoles field.
func (o *GetUsers200ResponseDataInner) SetGroupRoles(v []GetUsers200ResponseDataInnerGroupRolesInner) {
	o.GroupRoles = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GetUsers200ResponseDataInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetUsers200ResponseDataInner) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsers200ResponseDataInner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetUsers200ResponseDataInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GetUsers200ResponseDataInner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GetUsers200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUsers200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.OrganizationRole) {
		toSerialize["organizationRole"] = o.OrganizationRole
	}
	if !IsNil(o.GroupRoles) {
		toSerialize["groupRoles"] = o.GroupRoles
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetUsers200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	varGetUsers200ResponseDataInner := _GetUsers200ResponseDataInner{}

	err = json.Unmarshal(data, &varGetUsers200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetUsers200ResponseDataInner(varGetUsers200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "email")
		delete(additionalProperties, "organizationRole")
		delete(additionalProperties, "groupRoles")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetUsers200ResponseDataInner struct {
	value *GetUsers200ResponseDataInner
	isSet bool
}

func (v NullableGetUsers200ResponseDataInner) Get() *GetUsers200ResponseDataInner {
	return v.value
}

func (v *NullableGetUsers200ResponseDataInner) Set(val *GetUsers200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUsers200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUsers200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUsers200ResponseDataInner(val *GetUsers200ResponseDataInner) *NullableGetUsers200ResponseDataInner {
	return &NullableGetUsers200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetUsers200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUsers200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


