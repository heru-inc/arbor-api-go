/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the InitiateFileUpload200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiateFileUpload200Response{}

// InitiateFileUpload200Response struct for InitiateFileUpload200Response
type InitiateFileUpload200Response struct {
	Key *string `json:"key,omitempty"`
	UploadId *string `json:"uploadId,omitempty"`
	FileId *string `json:"fileId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InitiateFileUpload200Response InitiateFileUpload200Response

// NewInitiateFileUpload200Response instantiates a new InitiateFileUpload200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiateFileUpload200Response() *InitiateFileUpload200Response {
	this := InitiateFileUpload200Response{}
	return &this
}

// NewInitiateFileUpload200ResponseWithDefaults instantiates a new InitiateFileUpload200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiateFileUpload200ResponseWithDefaults() *InitiateFileUpload200Response {
	this := InitiateFileUpload200Response{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *InitiateFileUpload200Response) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateFileUpload200Response) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *InitiateFileUpload200Response) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *InitiateFileUpload200Response) SetKey(v string) {
	o.Key = &v
}

// GetUploadId returns the UploadId field value if set, zero value otherwise.
func (o *InitiateFileUpload200Response) GetUploadId() string {
	if o == nil || IsNil(o.UploadId) {
		var ret string
		return ret
	}
	return *o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateFileUpload200Response) GetUploadIdOk() (*string, bool) {
	if o == nil || IsNil(o.UploadId) {
		return nil, false
	}
	return o.UploadId, true
}

// HasUploadId returns a boolean if a field has been set.
func (o *InitiateFileUpload200Response) HasUploadId() bool {
	if o != nil && !IsNil(o.UploadId) {
		return true
	}

	return false
}

// SetUploadId gets a reference to the given string and assigns it to the UploadId field.
func (o *InitiateFileUpload200Response) SetUploadId(v string) {
	o.UploadId = &v
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *InitiateFileUpload200Response) GetFileId() string {
	if o == nil || IsNil(o.FileId) {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateFileUpload200Response) GetFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileId) {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *InitiateFileUpload200Response) HasFileId() bool {
	if o != nil && !IsNil(o.FileId) {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *InitiateFileUpload200Response) SetFileId(v string) {
	o.FileId = &v
}

func (o InitiateFileUpload200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiateFileUpload200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.UploadId) {
		toSerialize["uploadId"] = o.UploadId
	}
	if !IsNil(o.FileId) {
		toSerialize["fileId"] = o.FileId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InitiateFileUpload200Response) UnmarshalJSON(data []byte) (err error) {
	varInitiateFileUpload200Response := _InitiateFileUpload200Response{}

	err = json.Unmarshal(data, &varInitiateFileUpload200Response)

	if err != nil {
		return err
	}

	*o = InitiateFileUpload200Response(varInitiateFileUpload200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		delete(additionalProperties, "uploadId")
		delete(additionalProperties, "fileId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInitiateFileUpload200Response struct {
	value *InitiateFileUpload200Response
	isSet bool
}

func (v NullableInitiateFileUpload200Response) Get() *InitiateFileUpload200Response {
	return v.value
}

func (v *NullableInitiateFileUpload200Response) Set(val *InitiateFileUpload200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiateFileUpload200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiateFileUpload200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiateFileUpload200Response(val *InitiateFileUpload200Response) *NullableInitiateFileUpload200Response {
	return &NullableInitiateFileUpload200Response{value: val, isSet: true}
}

func (v NullableInitiateFileUpload200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiateFileUpload200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


