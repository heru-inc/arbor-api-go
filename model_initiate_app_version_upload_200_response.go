/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the InitiateAppVersionUpload200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiateAppVersionUpload200Response{}

// InitiateAppVersionUpload200Response struct for InitiateAppVersionUpload200Response
type InitiateAppVersionUpload200Response struct {
	UploadId *string `json:"uploadId,omitempty"`
	Key *string `json:"key,omitempty"`
	VersionId *string `json:"versionId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InitiateAppVersionUpload200Response InitiateAppVersionUpload200Response

// NewInitiateAppVersionUpload200Response instantiates a new InitiateAppVersionUpload200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiateAppVersionUpload200Response() *InitiateAppVersionUpload200Response {
	this := InitiateAppVersionUpload200Response{}
	return &this
}

// NewInitiateAppVersionUpload200ResponseWithDefaults instantiates a new InitiateAppVersionUpload200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiateAppVersionUpload200ResponseWithDefaults() *InitiateAppVersionUpload200Response {
	this := InitiateAppVersionUpload200Response{}
	return &this
}

// GetUploadId returns the UploadId field value if set, zero value otherwise.
func (o *InitiateAppVersionUpload200Response) GetUploadId() string {
	if o == nil || IsNil(o.UploadId) {
		var ret string
		return ret
	}
	return *o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateAppVersionUpload200Response) GetUploadIdOk() (*string, bool) {
	if o == nil || IsNil(o.UploadId) {
		return nil, false
	}
	return o.UploadId, true
}

// HasUploadId returns a boolean if a field has been set.
func (o *InitiateAppVersionUpload200Response) HasUploadId() bool {
	if o != nil && !IsNil(o.UploadId) {
		return true
	}

	return false
}

// SetUploadId gets a reference to the given string and assigns it to the UploadId field.
func (o *InitiateAppVersionUpload200Response) SetUploadId(v string) {
	o.UploadId = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *InitiateAppVersionUpload200Response) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateAppVersionUpload200Response) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *InitiateAppVersionUpload200Response) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *InitiateAppVersionUpload200Response) SetKey(v string) {
	o.Key = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *InitiateAppVersionUpload200Response) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateAppVersionUpload200Response) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *InitiateAppVersionUpload200Response) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *InitiateAppVersionUpload200Response) SetVersionId(v string) {
	o.VersionId = &v
}

func (o InitiateAppVersionUpload200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiateAppVersionUpload200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UploadId) {
		toSerialize["uploadId"] = o.UploadId
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InitiateAppVersionUpload200Response) UnmarshalJSON(data []byte) (err error) {
	varInitiateAppVersionUpload200Response := _InitiateAppVersionUpload200Response{}

	err = json.Unmarshal(data, &varInitiateAppVersionUpload200Response)

	if err != nil {
		return err
	}

	*o = InitiateAppVersionUpload200Response(varInitiateAppVersionUpload200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "uploadId")
		delete(additionalProperties, "key")
		delete(additionalProperties, "versionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInitiateAppVersionUpload200Response struct {
	value *InitiateAppVersionUpload200Response
	isSet bool
}

func (v NullableInitiateAppVersionUpload200Response) Get() *InitiateAppVersionUpload200Response {
	return v.value
}

func (v *NullableInitiateAppVersionUpload200Response) Set(val *InitiateAppVersionUpload200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiateAppVersionUpload200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiateAppVersionUpload200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiateAppVersionUpload200Response(val *InitiateAppVersionUpload200Response) *NullableInitiateAppVersionUpload200Response {
	return &NullableInitiateAppVersionUpload200Response{value: val, isSet: true}
}

func (v NullableInitiateAppVersionUpload200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiateAppVersionUpload200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


