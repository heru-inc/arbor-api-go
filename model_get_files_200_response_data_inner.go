/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetFiles200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFiles200ResponseDataInner{}

// GetFiles200ResponseDataInner struct for GetFiles200ResponseDataInner
type GetFiles200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Location *string `json:"location,omitempty"`
	Size *string `json:"size,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Added *string `json:"added,omitempty"`
	DeviceIds []string `json:"deviceIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetFiles200ResponseDataInner GetFiles200ResponseDataInner

// NewGetFiles200ResponseDataInner instantiates a new GetFiles200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFiles200ResponseDataInner() *GetFiles200ResponseDataInner {
	this := GetFiles200ResponseDataInner{}
	return &this
}

// NewGetFiles200ResponseDataInnerWithDefaults instantiates a new GetFiles200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFiles200ResponseDataInnerWithDefaults() *GetFiles200ResponseDataInner {
	this := GetFiles200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetFiles200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetFiles200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *GetFiles200ResponseDataInner) SetLocation(v string) {
	o.Location = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *GetFiles200ResponseDataInner) SetSize(v string) {
	o.Size = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GetFiles200ResponseDataInner) SetTags(v []string) {
	o.Tags = v
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetAdded() string {
	if o == nil || IsNil(o.Added) {
		var ret string
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetAddedOk() (*string, bool) {
	if o == nil || IsNil(o.Added) {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasAdded() bool {
	if o != nil && !IsNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given string and assigns it to the Added field.
func (o *GetFiles200ResponseDataInner) SetAdded(v string) {
	o.Added = &v
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *GetFiles200ResponseDataInner) GetDeviceIds() []string {
	if o == nil || IsNil(o.DeviceIds) {
		var ret []string
		return ret
	}
	return o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFiles200ResponseDataInner) GetDeviceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DeviceIds) {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *GetFiles200ResponseDataInner) HasDeviceIds() bool {
	if o != nil && !IsNil(o.DeviceIds) {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []string and assigns it to the DeviceIds field.
func (o *GetFiles200ResponseDataInner) SetDeviceIds(v []string) {
	o.DeviceIds = v
}

func (o GetFiles200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFiles200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !IsNil(o.DeviceIds) {
		toSerialize["deviceIds"] = o.DeviceIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetFiles200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	varGetFiles200ResponseDataInner := _GetFiles200ResponseDataInner{}

	err = json.Unmarshal(data, &varGetFiles200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetFiles200ResponseDataInner(varGetFiles200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "location")
		delete(additionalProperties, "size")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "added")
		delete(additionalProperties, "deviceIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetFiles200ResponseDataInner struct {
	value *GetFiles200ResponseDataInner
	isSet bool
}

func (v NullableGetFiles200ResponseDataInner) Get() *GetFiles200ResponseDataInner {
	return v.value
}

func (v *NullableGetFiles200ResponseDataInner) Set(val *GetFiles200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFiles200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFiles200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFiles200ResponseDataInner(val *GetFiles200ResponseDataInner) *NullableGetFiles200ResponseDataInner {
	return &NullableGetFiles200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetFiles200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFiles200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


