/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetAppVersions200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAppVersions200Response{}

// GetAppVersions200Response A paginated list of app versions.
type GetAppVersions200Response struct {
	Data []GetAppVersions200ResponseDataInner `json:"data,omitempty"`
	Links *GetAppVersions200ResponseLinks `json:"links,omitempty"`
	Meta *GetAppVersions200ResponseMeta `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetAppVersions200Response GetAppVersions200Response

// NewGetAppVersions200Response instantiates a new GetAppVersions200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAppVersions200Response() *GetAppVersions200Response {
	this := GetAppVersions200Response{}
	return &this
}

// NewGetAppVersions200ResponseWithDefaults instantiates a new GetAppVersions200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAppVersions200ResponseWithDefaults() *GetAppVersions200Response {
	this := GetAppVersions200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetAppVersions200Response) GetData() []GetAppVersions200ResponseDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []GetAppVersions200ResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppVersions200Response) GetDataOk() ([]GetAppVersions200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetAppVersions200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GetAppVersions200ResponseDataInner and assigns it to the Data field.
func (o *GetAppVersions200Response) SetData(v []GetAppVersions200ResponseDataInner) {
	o.Data = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetAppVersions200Response) GetLinks() GetAppVersions200ResponseLinks {
	if o == nil || IsNil(o.Links) {
		var ret GetAppVersions200ResponseLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppVersions200Response) GetLinksOk() (*GetAppVersions200ResponseLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetAppVersions200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given GetAppVersions200ResponseLinks and assigns it to the Links field.
func (o *GetAppVersions200Response) SetLinks(v GetAppVersions200ResponseLinks) {
	o.Links = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetAppVersions200Response) GetMeta() GetAppVersions200ResponseMeta {
	if o == nil || IsNil(o.Meta) {
		var ret GetAppVersions200ResponseMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppVersions200Response) GetMetaOk() (*GetAppVersions200ResponseMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetAppVersions200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given GetAppVersions200ResponseMeta and assigns it to the Meta field.
func (o *GetAppVersions200Response) SetMeta(v GetAppVersions200ResponseMeta) {
	o.Meta = &v
}

func (o GetAppVersions200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAppVersions200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetAppVersions200Response) UnmarshalJSON(data []byte) (err error) {
	varGetAppVersions200Response := _GetAppVersions200Response{}

	err = json.Unmarshal(data, &varGetAppVersions200Response)

	if err != nil {
		return err
	}

	*o = GetAppVersions200Response(varGetAppVersions200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "links")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetAppVersions200Response struct {
	value *GetAppVersions200Response
	isSet bool
}

func (v NullableGetAppVersions200Response) Get() *GetAppVersions200Response {
	return v.value
}

func (v *NullableGetAppVersions200Response) Set(val *GetAppVersions200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAppVersions200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAppVersions200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAppVersions200Response(val *GetAppVersions200Response) *NullableGetAppVersions200Response {
	return &NullableGetAppVersions200Response{value: val, isSet: true}
}

func (v NullableGetAppVersions200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAppVersions200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


