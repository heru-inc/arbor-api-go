/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetDeviceGroups200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceGroups200ResponseDataInner{}

// GetDeviceGroups200ResponseDataInner struct for GetDeviceGroups200ResponseDataInner
type GetDeviceGroups200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	DeviceCount *int32 `json:"deviceCount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetDeviceGroups200ResponseDataInner GetDeviceGroups200ResponseDataInner

// NewGetDeviceGroups200ResponseDataInner instantiates a new GetDeviceGroups200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceGroups200ResponseDataInner() *GetDeviceGroups200ResponseDataInner {
	this := GetDeviceGroups200ResponseDataInner{}
	return &this
}

// NewGetDeviceGroups200ResponseDataInnerWithDefaults instantiates a new GetDeviceGroups200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceGroups200ResponseDataInnerWithDefaults() *GetDeviceGroups200ResponseDataInner {
	this := GetDeviceGroups200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDeviceGroups200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceGroups200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetDeviceGroups200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetDeviceGroups200ResponseDataInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceGroups200ResponseDataInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseDataInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetDeviceGroups200ResponseDataInner) SetTitle(v string) {
	o.Title = &v
}

// GetDeviceCount returns the DeviceCount field value if set, zero value otherwise.
func (o *GetDeviceGroups200ResponseDataInner) GetDeviceCount() int32 {
	if o == nil || IsNil(o.DeviceCount) {
		var ret int32
		return ret
	}
	return *o.DeviceCount
}

// GetDeviceCountOk returns a tuple with the DeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceGroups200ResponseDataInner) GetDeviceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DeviceCount) {
		return nil, false
	}
	return o.DeviceCount, true
}

// HasDeviceCount returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseDataInner) HasDeviceCount() bool {
	if o != nil && !IsNil(o.DeviceCount) {
		return true
	}

	return false
}

// SetDeviceCount gets a reference to the given int32 and assigns it to the DeviceCount field.
func (o *GetDeviceGroups200ResponseDataInner) SetDeviceCount(v int32) {
	o.DeviceCount = &v
}

func (o GetDeviceGroups200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceGroups200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.DeviceCount) {
		toSerialize["deviceCount"] = o.DeviceCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetDeviceGroups200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	varGetDeviceGroups200ResponseDataInner := _GetDeviceGroups200ResponseDataInner{}

	err = json.Unmarshal(data, &varGetDeviceGroups200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetDeviceGroups200ResponseDataInner(varGetDeviceGroups200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "deviceCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetDeviceGroups200ResponseDataInner struct {
	value *GetDeviceGroups200ResponseDataInner
	isSet bool
}

func (v NullableGetDeviceGroups200ResponseDataInner) Get() *GetDeviceGroups200ResponseDataInner {
	return v.value
}

func (v *NullableGetDeviceGroups200ResponseDataInner) Set(val *GetDeviceGroups200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceGroups200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceGroups200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceGroups200ResponseDataInner(val *GetDeviceGroups200ResponseDataInner) *NullableGetDeviceGroups200ResponseDataInner {
	return &NullableGetDeviceGroups200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetDeviceGroups200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceGroups200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


