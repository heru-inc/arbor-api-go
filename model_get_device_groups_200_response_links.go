/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetDeviceGroups200ResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceGroups200ResponseLinks{}

// GetDeviceGroups200ResponseLinks struct for GetDeviceGroups200ResponseLinks
type GetDeviceGroups200ResponseLinks struct {
	First *string `json:"first,omitempty"`
	Last *string `json:"last,omitempty"`
	Prev NullableString `json:"prev,omitempty"`
	Next NullableString `json:"next,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetDeviceGroups200ResponseLinks GetDeviceGroups200ResponseLinks

// NewGetDeviceGroups200ResponseLinks instantiates a new GetDeviceGroups200ResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceGroups200ResponseLinks() *GetDeviceGroups200ResponseLinks {
	this := GetDeviceGroups200ResponseLinks{}
	return &this
}

// NewGetDeviceGroups200ResponseLinksWithDefaults instantiates a new GetDeviceGroups200ResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceGroups200ResponseLinksWithDefaults() *GetDeviceGroups200ResponseLinks {
	this := GetDeviceGroups200ResponseLinks{}
	return &this
}

// GetFirst returns the First field value if set, zero value otherwise.
func (o *GetDeviceGroups200ResponseLinks) GetFirst() string {
	if o == nil || IsNil(o.First) {
		var ret string
		return ret
	}
	return *o.First
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceGroups200ResponseLinks) GetFirstOk() (*string, bool) {
	if o == nil || IsNil(o.First) {
		return nil, false
	}
	return o.First, true
}

// HasFirst returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseLinks) HasFirst() bool {
	if o != nil && !IsNil(o.First) {
		return true
	}

	return false
}

// SetFirst gets a reference to the given string and assigns it to the First field.
func (o *GetDeviceGroups200ResponseLinks) SetFirst(v string) {
	o.First = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *GetDeviceGroups200ResponseLinks) GetLast() string {
	if o == nil || IsNil(o.Last) {
		var ret string
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceGroups200ResponseLinks) GetLastOk() (*string, bool) {
	if o == nil || IsNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseLinks) HasLast() bool {
	if o != nil && !IsNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given string and assigns it to the Last field.
func (o *GetDeviceGroups200ResponseLinks) SetLast(v string) {
	o.Last = &v
}

// GetPrev returns the Prev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetDeviceGroups200ResponseLinks) GetPrev() string {
	if o == nil || IsNil(o.Prev.Get()) {
		var ret string
		return ret
	}
	return *o.Prev.Get()
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetDeviceGroups200ResponseLinks) GetPrevOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prev.Get(), o.Prev.IsSet()
}

// HasPrev returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseLinks) HasPrev() bool {
	if o != nil && o.Prev.IsSet() {
		return true
	}

	return false
}

// SetPrev gets a reference to the given NullableString and assigns it to the Prev field.
func (o *GetDeviceGroups200ResponseLinks) SetPrev(v string) {
	o.Prev.Set(&v)
}
// SetPrevNil sets the value for Prev to be an explicit nil
func (o *GetDeviceGroups200ResponseLinks) SetPrevNil() {
	o.Prev.Set(nil)
}

// UnsetPrev ensures that no value is present for Prev, not even an explicit nil
func (o *GetDeviceGroups200ResponseLinks) UnsetPrev() {
	o.Prev.Unset()
}

// GetNext returns the Next field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetDeviceGroups200ResponseLinks) GetNext() string {
	if o == nil || IsNil(o.Next.Get()) {
		var ret string
		return ret
	}
	return *o.Next.Get()
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetDeviceGroups200ResponseLinks) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Next.Get(), o.Next.IsSet()
}

// HasNext returns a boolean if a field has been set.
func (o *GetDeviceGroups200ResponseLinks) HasNext() bool {
	if o != nil && o.Next.IsSet() {
		return true
	}

	return false
}

// SetNext gets a reference to the given NullableString and assigns it to the Next field.
func (o *GetDeviceGroups200ResponseLinks) SetNext(v string) {
	o.Next.Set(&v)
}
// SetNextNil sets the value for Next to be an explicit nil
func (o *GetDeviceGroups200ResponseLinks) SetNextNil() {
	o.Next.Set(nil)
}

// UnsetNext ensures that no value is present for Next, not even an explicit nil
func (o *GetDeviceGroups200ResponseLinks) UnsetNext() {
	o.Next.Unset()
}

func (o GetDeviceGroups200ResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceGroups200ResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.First) {
		toSerialize["first"] = o.First
	}
	if !IsNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	if o.Prev.IsSet() {
		toSerialize["prev"] = o.Prev.Get()
	}
	if o.Next.IsSet() {
		toSerialize["next"] = o.Next.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetDeviceGroups200ResponseLinks) UnmarshalJSON(data []byte) (err error) {
	varGetDeviceGroups200ResponseLinks := _GetDeviceGroups200ResponseLinks{}

	err = json.Unmarshal(data, &varGetDeviceGroups200ResponseLinks)

	if err != nil {
		return err
	}

	*o = GetDeviceGroups200ResponseLinks(varGetDeviceGroups200ResponseLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "first")
		delete(additionalProperties, "last")
		delete(additionalProperties, "prev")
		delete(additionalProperties, "next")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetDeviceGroups200ResponseLinks struct {
	value *GetDeviceGroups200ResponseLinks
	isSet bool
}

func (v NullableGetDeviceGroups200ResponseLinks) Get() *GetDeviceGroups200ResponseLinks {
	return v.value
}

func (v *NullableGetDeviceGroups200ResponseLinks) Set(val *GetDeviceGroups200ResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceGroups200ResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceGroups200ResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceGroups200ResponseLinks(val *GetDeviceGroups200ResponseLinks) *NullableGetDeviceGroups200ResponseLinks {
	return &NullableGetDeviceGroups200ResponseLinks{value: val, isSet: true}
}

func (v NullableGetDeviceGroups200ResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceGroups200ResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


