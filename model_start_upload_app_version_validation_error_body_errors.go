/*
arborxr-api-v2

This API provides a RESTful interface to interact with your organization's data.

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StartUploadAppVersionValidationErrorBodyErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartUploadAppVersionValidationErrorBodyErrors{}

// StartUploadAppVersionValidationErrorBodyErrors struct for StartUploadAppVersionValidationErrorBodyErrors
type StartUploadAppVersionValidationErrorBodyErrors struct {
	Filename []string `json:"filename,omitempty"`
	ReleaseChannelId []string `json:"releaseChannelId,omitempty"`
}

// NewStartUploadAppVersionValidationErrorBodyErrors instantiates a new StartUploadAppVersionValidationErrorBodyErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartUploadAppVersionValidationErrorBodyErrors() *StartUploadAppVersionValidationErrorBodyErrors {
	this := StartUploadAppVersionValidationErrorBodyErrors{}
	return &this
}

// NewStartUploadAppVersionValidationErrorBodyErrorsWithDefaults instantiates a new StartUploadAppVersionValidationErrorBodyErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartUploadAppVersionValidationErrorBodyErrorsWithDefaults() *StartUploadAppVersionValidationErrorBodyErrors {
	this := StartUploadAppVersionValidationErrorBodyErrors{}
	return &this
}

// GetFilename returns the Filename field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartUploadAppVersionValidationErrorBodyErrors) GetFilename() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartUploadAppVersionValidationErrorBodyErrors) GetFilenameOk() ([]string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *StartUploadAppVersionValidationErrorBodyErrors) HasFilename() bool {
	if o != nil && IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given []string and assigns it to the Filename field.
func (o *StartUploadAppVersionValidationErrorBodyErrors) SetFilename(v []string) {
	o.Filename = v
}

// GetReleaseChannelId returns the ReleaseChannelId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StartUploadAppVersionValidationErrorBodyErrors) GetReleaseChannelId() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ReleaseChannelId
}

// GetReleaseChannelIdOk returns a tuple with the ReleaseChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StartUploadAppVersionValidationErrorBodyErrors) GetReleaseChannelIdOk() ([]string, bool) {
	if o == nil || IsNil(o.ReleaseChannelId) {
		return nil, false
	}
	return o.ReleaseChannelId, true
}

// HasReleaseChannelId returns a boolean if a field has been set.
func (o *StartUploadAppVersionValidationErrorBodyErrors) HasReleaseChannelId() bool {
	if o != nil && IsNil(o.ReleaseChannelId) {
		return true
	}

	return false
}

// SetReleaseChannelId gets a reference to the given []string and assigns it to the ReleaseChannelId field.
func (o *StartUploadAppVersionValidationErrorBodyErrors) SetReleaseChannelId(v []string) {
	o.ReleaseChannelId = v
}

func (o StartUploadAppVersionValidationErrorBodyErrors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartUploadAppVersionValidationErrorBodyErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.ReleaseChannelId != nil {
		toSerialize["releaseChannelId"] = o.ReleaseChannelId
	}
	return toSerialize, nil
}

type NullableStartUploadAppVersionValidationErrorBodyErrors struct {
	value *StartUploadAppVersionValidationErrorBodyErrors
	isSet bool
}

func (v NullableStartUploadAppVersionValidationErrorBodyErrors) Get() *StartUploadAppVersionValidationErrorBodyErrors {
	return v.value
}

func (v *NullableStartUploadAppVersionValidationErrorBodyErrors) Set(val *StartUploadAppVersionValidationErrorBodyErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableStartUploadAppVersionValidationErrorBodyErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableStartUploadAppVersionValidationErrorBodyErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartUploadAppVersionValidationErrorBodyErrors(val *StartUploadAppVersionValidationErrorBodyErrors) *NullableStartUploadAppVersionValidationErrorBodyErrors {
	return &NullableStartUploadAppVersionValidationErrorBodyErrors{value: val, isSet: true}
}

func (v NullableStartUploadAppVersionValidationErrorBodyErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartUploadAppVersionValidationErrorBodyErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


