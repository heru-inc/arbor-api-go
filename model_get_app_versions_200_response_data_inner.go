/*
ArborXR Public API

This API provides a RESTful interface to interact with your organization's data.

API version: v2
Contact: support@arborxr.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arborapi

import (
	"encoding/json"
)

// checks if the GetAppVersions200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAppVersions200ResponseDataInner{}

// GetAppVersions200ResponseDataInner struct for GetAppVersions200ResponseDataInner
type GetAppVersions200ResponseDataInner struct {
	Id *string `json:"id,omitempty"`
	Version NullableString `json:"version,omitempty"`
	Code NullableInt32 `json:"code,omitempty"`
	Size NullableString `json:"size,omitempty"`
	Added *string `json:"added,omitempty"`
	Status *string `json:"status,omitempty"`
	DownloadUrl NullableString `json:"downloadUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetAppVersions200ResponseDataInner GetAppVersions200ResponseDataInner

// NewGetAppVersions200ResponseDataInner instantiates a new GetAppVersions200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAppVersions200ResponseDataInner() *GetAppVersions200ResponseDataInner {
	this := GetAppVersions200ResponseDataInner{}
	return &this
}

// NewGetAppVersions200ResponseDataInnerWithDefaults instantiates a new GetAppVersions200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAppVersions200ResponseDataInnerWithDefaults() *GetAppVersions200ResponseDataInner {
	this := GetAppVersions200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAppVersions200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppVersions200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetAppVersions200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAppVersions200ResponseDataInner) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAppVersions200ResponseDataInner) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *GetAppVersions200ResponseDataInner) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *GetAppVersions200ResponseDataInner) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *GetAppVersions200ResponseDataInner) UnsetVersion() {
	o.Version.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAppVersions200ResponseDataInner) GetCode() int32 {
	if o == nil || IsNil(o.Code.Get()) {
		var ret int32
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAppVersions200ResponseDataInner) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableInt32 and assigns it to the Code field.
func (o *GetAppVersions200ResponseDataInner) SetCode(v int32) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *GetAppVersions200ResponseDataInner) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *GetAppVersions200ResponseDataInner) UnsetCode() {
	o.Code.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAppVersions200ResponseDataInner) GetSize() string {
	if o == nil || IsNil(o.Size.Get()) {
		var ret string
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAppVersions200ResponseDataInner) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableString and assigns it to the Size field.
func (o *GetAppVersions200ResponseDataInner) SetSize(v string) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *GetAppVersions200ResponseDataInner) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *GetAppVersions200ResponseDataInner) UnsetSize() {
	o.Size.Unset()
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *GetAppVersions200ResponseDataInner) GetAdded() string {
	if o == nil || IsNil(o.Added) {
		var ret string
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppVersions200ResponseDataInner) GetAddedOk() (*string, bool) {
	if o == nil || IsNil(o.Added) {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasAdded() bool {
	if o != nil && !IsNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given string and assigns it to the Added field.
func (o *GetAppVersions200ResponseDataInner) SetAdded(v string) {
	o.Added = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetAppVersions200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAppVersions200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetAppVersions200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAppVersions200ResponseDataInner) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl.Get()) {
		var ret string
		return ret
	}
	return *o.DownloadUrl.Get()
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAppVersions200ResponseDataInner) GetDownloadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DownloadUrl.Get(), o.DownloadUrl.IsSet()
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *GetAppVersions200ResponseDataInner) HasDownloadUrl() bool {
	if o != nil && o.DownloadUrl.IsSet() {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given NullableString and assigns it to the DownloadUrl field.
func (o *GetAppVersions200ResponseDataInner) SetDownloadUrl(v string) {
	o.DownloadUrl.Set(&v)
}
// SetDownloadUrlNil sets the value for DownloadUrl to be an explicit nil
func (o *GetAppVersions200ResponseDataInner) SetDownloadUrlNil() {
	o.DownloadUrl.Set(nil)
}

// UnsetDownloadUrl ensures that no value is present for DownloadUrl, not even an explicit nil
func (o *GetAppVersions200ResponseDataInner) UnsetDownloadUrl() {
	o.DownloadUrl.Unset()
}

func (o GetAppVersions200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAppVersions200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if !IsNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.DownloadUrl.IsSet() {
		toSerialize["downloadUrl"] = o.DownloadUrl.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetAppVersions200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	varGetAppVersions200ResponseDataInner := _GetAppVersions200ResponseDataInner{}

	err = json.Unmarshal(data, &varGetAppVersions200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetAppVersions200ResponseDataInner(varGetAppVersions200ResponseDataInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "version")
		delete(additionalProperties, "code")
		delete(additionalProperties, "size")
		delete(additionalProperties, "added")
		delete(additionalProperties, "status")
		delete(additionalProperties, "downloadUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetAppVersions200ResponseDataInner struct {
	value *GetAppVersions200ResponseDataInner
	isSet bool
}

func (v NullableGetAppVersions200ResponseDataInner) Get() *GetAppVersions200ResponseDataInner {
	return v.value
}

func (v *NullableGetAppVersions200ResponseDataInner) Set(val *GetAppVersions200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAppVersions200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAppVersions200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAppVersions200ResponseDataInner(val *GetAppVersions200ResponseDataInner) *NullableGetAppVersions200ResponseDataInner {
	return &NullableGetAppVersions200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetAppVersions200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAppVersions200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


