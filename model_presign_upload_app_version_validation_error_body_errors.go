/*
arborxr-api-v2

This API provides a RESTful interface to interact with your organization's data.

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package arbor-api-go

import (
	"encoding/json"
)

// checks if the PresignUploadAppVersionValidationErrorBodyErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PresignUploadAppVersionValidationErrorBodyErrors{}

// PresignUploadAppVersionValidationErrorBodyErrors struct for PresignUploadAppVersionValidationErrorBodyErrors
type PresignUploadAppVersionValidationErrorBodyErrors struct {
	Key []string `json:"key,omitempty"`
	UploadId []string `json:"uploadId,omitempty"`
	PartNumbers []string `json:"partNumbers,omitempty"`
	PartNumbers0 []string `json:"partNumbers.0,omitempty"`
	PartNumbers1 []string `json:"partNumbers.1,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PresignUploadAppVersionValidationErrorBodyErrors PresignUploadAppVersionValidationErrorBodyErrors

// NewPresignUploadAppVersionValidationErrorBodyErrors instantiates a new PresignUploadAppVersionValidationErrorBodyErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPresignUploadAppVersionValidationErrorBodyErrors() *PresignUploadAppVersionValidationErrorBodyErrors {
	this := PresignUploadAppVersionValidationErrorBodyErrors{}
	return &this
}

// NewPresignUploadAppVersionValidationErrorBodyErrorsWithDefaults instantiates a new PresignUploadAppVersionValidationErrorBodyErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresignUploadAppVersionValidationErrorBodyErrorsWithDefaults() *PresignUploadAppVersionValidationErrorBodyErrors {
	this := PresignUploadAppVersionValidationErrorBodyErrors{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetKey() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetKeyOk() ([]string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given []string and assigns it to the Key field.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) SetKey(v []string) {
	o.Key = v
}

// GetUploadId returns the UploadId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetUploadId() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetUploadIdOk() ([]string, bool) {
	if o == nil || IsNil(o.UploadId) {
		return nil, false
	}
	return o.UploadId, true
}

// HasUploadId returns a boolean if a field has been set.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) HasUploadId() bool {
	if o != nil && !IsNil(o.UploadId) {
		return true
	}

	return false
}

// SetUploadId gets a reference to the given []string and assigns it to the UploadId field.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) SetUploadId(v []string) {
	o.UploadId = v
}

// GetPartNumbers returns the PartNumbers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetPartNumbers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.PartNumbers
}

// GetPartNumbersOk returns a tuple with the PartNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetPartNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.PartNumbers) {
		return nil, false
	}
	return o.PartNumbers, true
}

// HasPartNumbers returns a boolean if a field has been set.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) HasPartNumbers() bool {
	if o != nil && !IsNil(o.PartNumbers) {
		return true
	}

	return false
}

// SetPartNumbers gets a reference to the given []string and assigns it to the PartNumbers field.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) SetPartNumbers(v []string) {
	o.PartNumbers = v
}

// GetPartNumbers0 returns the PartNumbers0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetPartNumbers0() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.PartNumbers0
}

// GetPartNumbers0Ok returns a tuple with the PartNumbers0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetPartNumbers0Ok() ([]string, bool) {
	if o == nil || IsNil(o.PartNumbers0) {
		return nil, false
	}
	return o.PartNumbers0, true
}

// HasPartNumbers0 returns a boolean if a field has been set.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) HasPartNumbers0() bool {
	if o != nil && !IsNil(o.PartNumbers0) {
		return true
	}

	return false
}

// SetPartNumbers0 gets a reference to the given []string and assigns it to the PartNumbers0 field.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) SetPartNumbers0(v []string) {
	o.PartNumbers0 = v
}

// GetPartNumbers1 returns the PartNumbers1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetPartNumbers1() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.PartNumbers1
}

// GetPartNumbers1Ok returns a tuple with the PartNumbers1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PresignUploadAppVersionValidationErrorBodyErrors) GetPartNumbers1Ok() ([]string, bool) {
	if o == nil || IsNil(o.PartNumbers1) {
		return nil, false
	}
	return o.PartNumbers1, true
}

// HasPartNumbers1 returns a boolean if a field has been set.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) HasPartNumbers1() bool {
	if o != nil && !IsNil(o.PartNumbers1) {
		return true
	}

	return false
}

// SetPartNumbers1 gets a reference to the given []string and assigns it to the PartNumbers1 field.
func (o *PresignUploadAppVersionValidationErrorBodyErrors) SetPartNumbers1(v []string) {
	o.PartNumbers1 = v
}

func (o PresignUploadAppVersionValidationErrorBodyErrors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PresignUploadAppVersionValidationErrorBodyErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.UploadId != nil {
		toSerialize["uploadId"] = o.UploadId
	}
	if o.PartNumbers != nil {
		toSerialize["partNumbers"] = o.PartNumbers
	}
	if o.PartNumbers0 != nil {
		toSerialize["partNumbers.0"] = o.PartNumbers0
	}
	if o.PartNumbers1 != nil {
		toSerialize["partNumbers.1"] = o.PartNumbers1
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PresignUploadAppVersionValidationErrorBodyErrors) UnmarshalJSON(data []byte) (err error) {
	varPresignUploadAppVersionValidationErrorBodyErrors := _PresignUploadAppVersionValidationErrorBodyErrors{}

	err = json.Unmarshal(data, &varPresignUploadAppVersionValidationErrorBodyErrors)

	if err != nil {
		return err
	}

	*o = PresignUploadAppVersionValidationErrorBodyErrors(varPresignUploadAppVersionValidationErrorBodyErrors)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		delete(additionalProperties, "uploadId")
		delete(additionalProperties, "partNumbers")
		delete(additionalProperties, "partNumbers.0")
		delete(additionalProperties, "partNumbers.1")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePresignUploadAppVersionValidationErrorBodyErrors struct {
	value *PresignUploadAppVersionValidationErrorBodyErrors
	isSet bool
}

func (v NullablePresignUploadAppVersionValidationErrorBodyErrors) Get() *PresignUploadAppVersionValidationErrorBodyErrors {
	return v.value
}

func (v *NullablePresignUploadAppVersionValidationErrorBodyErrors) Set(val *PresignUploadAppVersionValidationErrorBodyErrors) {
	v.value = val
	v.isSet = true
}

func (v NullablePresignUploadAppVersionValidationErrorBodyErrors) IsSet() bool {
	return v.isSet
}

func (v *NullablePresignUploadAppVersionValidationErrorBodyErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePresignUploadAppVersionValidationErrorBodyErrors(val *PresignUploadAppVersionValidationErrorBodyErrors) *NullablePresignUploadAppVersionValidationErrorBodyErrors {
	return &NullablePresignUploadAppVersionValidationErrorBodyErrors{value: val, isSet: true}
}

func (v NullablePresignUploadAppVersionValidationErrorBodyErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePresignUploadAppVersionValidationErrorBodyErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


